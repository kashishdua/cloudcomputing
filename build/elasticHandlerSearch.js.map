{"version":3,"sources":["../src/elasticHandlerSearch.js"],"names":["module","exports","ESSearch","elastic_client","io","search_term","callback","search_query","toLowerCase","match_all","term","console","log","search","index","type","body","query","size","error","response","status","tweets","hits","forEach","hit","push","_source"],"mappings":";;AAAA;;;;;;AAEAA,OAAOC,OAAP,GAAiB;AACbC;AADa,CAAjB;;AAIA,SAASA,QAAT,CAAkBC,cAAlB,EAAkCC,EAAlC,EAAsCC,WAAtC,EAAmDC,QAAnD,EAA6D;AACzD,QAAG,CAACH,cAAJ,EAAoB;AAChB;AACH;;AAED;AACA,QAAII,eAAe,EAAnB;AACAF,kBAAcA,YAAYG,WAAZ,EAAd;AACA,QAAIH,gBAAgB,EAApB,EAAwB;AACpBE,qBAAaE,SAAb,GAAyB,EAAzB;AACH,KAFD,MAEO;AACHF,qBAAaG,IAAb,GAAoB,EAAE,QAASL,WAAX,EAApB;AACH;AACDM,YAAQC,GAAR,CAAY,cAAZ,EAA4BL,YAA5B;AACAJ,mBAAeU,MAAf,CAAsB;AAClBC,eAAO,QADW;AAElBC,cAAM,OAFY;AAGlBC,cAAM;AACFC,mBAAOV,YADL;AAEFW,kBAAM;AAFJ;AAHY,KAAtB,EAOE,UAAUC,KAAV,EAAiBC,QAAjB,EAA0BC,MAA1B,EAAkC;AAChC,YAAIF,KAAJ,EAAU;AACNR,oBAAQC,GAAR,CAAY,mBAAiBO,KAA7B;AACH,SAFD,MAGK;AAAA;AACD,oBAAIG,SAAS,EAAb;AACAX,wBAAQC,GAAR,CAAY,kBAAZ;AACAD,wBAAQC,GAAR,CAAYQ,QAAZ;AACAT,wBAAQC,GAAR,CAAY,cAAZ;AACAQ,yBAASG,IAAT,CAAcA,IAAd,CAAmBC,OAAnB,CAA2B,UAASC,GAAT,EAAa;AACpC;AACA;AACA;AACAH,2BAAOI,IAAP,CAAYD,IAAIE,OAAhB;AACH,iBALD;AAMArB,yBAASgB,MAAT;AAXC;AAYJ;AACJ,KAxBD;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH","file":"elasticHandlerSearch.js","sourcesContent":["import fs from 'fs';\n\nmodule.exports = {\n    ESSearch\n};\n\nfunction ESSearch(elastic_client, io, search_term, callback) {\n    if(!elastic_client) {\n        return;\n    }\n\n    // Run a search , emit to client side\n    let search_query = {};\n    search_term = search_term.toLowerCase();\n    if (search_term === '') {\n        search_query.match_all = {};\n    } else {\n        search_query.term = { \"body\" : search_term };\n    }\n    console.log('search query', search_query);\n    elastic_client.search({\n        index: 'tweets',\n        type: 'tweet',\n        body: {\n            query: search_query,\n            size: 100\n        }\n    },function (error, response,status) {\n        if (error){\n            console.log(\"search error: \"+error);\n        }\n        else {\n            let tweets = [];\n            console.log(\"--- Response ---\");\n            console.log(response);\n            console.log(\"--- Hits ---\");\n            response.hits.hits.forEach(function(hit){\n                //send to client\n                // io.emit('tweet', hit._source);\n                // console.log(hit._source);\n                tweets.push(hit._source);\n            });\n            callback(tweets);\n        }\n    });\n    \n    //Delete indexed tweets\n    // for(let i=0;i<22;i++) {\n    //     elastic_client.delete({  \n    //     index: 'tweets',\n    //     id: i,\n    //     type: 'tweet'\n    //     },function(err,resp,status) {\n    //         console.log(resp);\n    //         elastic_client.count({index: 'tweets',type: 'tweet'},function(err,resp,status) {  \n    //             console.log(\"tweet\",resp);\n    //         });\n    //     });\n    // }\n};"]}