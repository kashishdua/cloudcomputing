{"version":3,"sources":["../../src/models/Tweet.js"],"names":["Promise","global","schema","Schema","author","avatar","body","date","screenname","favs","retweets","loc_name","loc_lat","loc_lon","active","statics","getTweets","page","callback","tweets","start","Tweet","find","sort","exec","then","docs","forEach","tweet","model","module","exports"],"mappings":";;AAAA;;;;;;AACA,mBAASA,OAAT,GAAmBC,OAAOD,OAA1B;AACA;AACA,IAAIE,SAAS,IAAI,mBAASC,MAAb,CAAoB;AAC7BC,YAAS,QADoB;AAE7BC,YAAQ,QAFqB;AAG7BC,UAAO,QAHsB;AAI7BC,UAAM,MAJuB;AAK7BC,gBAAY,QALiB;AAM7BC,UAAM,QANuB;AAO7BC,cAAU,QAPmB;AAQ7BC,cAAW,QARkB;AAS7BC,aAAU,QATmB;AAU7BC,aAAU,QAVmB;AAW7BC,YAAQ;AAXqB,CAApB,CAAb;;AAcA;AACA;AACA;AACA;;AAEA;AACAZ,OAAOa,OAAP,CAAeC,SAAf,GAA2B,UAASC,IAAT,EAAeC,QAAf,EAAyB;;AAElD,QAAIC,SAAS,EAAb;AAAA,QACIC,QAASH,OAAO,EADpB;;AAGA;AACEI,UAAMC,IAAN,CAAW,EAAX,EAAc,0CAAd,CAAwD,6BAAxD,EAAuFC,IAAvF,CAA4F,EAAChB,MAAM,MAAP,EAA5F,EAA4GiB,IAA5G,GAAmHC,IAAnH,CAAwH,UAASC,IAAT,EAAc;AAClI;AACA,YAAGA,IAAH,EAAS;AACLP,qBAASO,IAAT,CADK,CACW;AAChBP,mBAAOQ,OAAP,CAAe,UAASC,KAAT,EAAe;AAC1BA,sBAAMd,MAAN,GAAe,IAAf,CAD0B,CACL;AACxB,aAFD;AAGH;;AAED;AACAI,iBAASC,MAAT;AACH,KAXD;AAYH,CAlBD;;AAoBA,IAAME,QAAQ,mBAASQ,KAAT,CAAe,OAAf,EAAwB3B,MAAxB,CAAd;AACA4B,OAAOC,OAAP,GAAiBV,KAAjB","file":"Tweet.js","sourcesContent":["import mongoose from 'mongoose';\nmongoose.Promise = global.Promise;\n// schema for tweet obj\nvar schema = new mongoose.Schema({\n    author : 'String',\n    avatar: 'String',\n    body : 'String',\n    date: 'Date',\n    screenname: 'String',\n    favs: 'Number',\n    retweets: 'Number',\n    loc_name : 'String',\n    loc_lat : 'String',\n    loc_lon : 'String',\n    active: 'Boolean'\n});\n\n//instance method\n// schema.methods.toString = function(err, res) {\n//   return this.model('Animal').find({ type: this.type }, cb);\n// };\n\n//static method\nschema.statics.getTweets = function(page, callback) {\n\n  let tweets = [],\n      start = (page * 10);\n\n  // Query the db, using skip and limit to achieve page chunks\n    Tweet.find({},'screenname body loc_name loc_lat loc_lon'/*,{skip: start, limit: 10}*/).sort({date: 'desc'}).exec().then(function(docs){\n        // If everything is cool...\n        if(docs) {\n            tweets = docs;  // We got tweets\n            tweets.forEach(function(tweet){\n                tweet.active = true; // Set them to active\n            });\n        }\n\n        // Pass them back to the specified callback\n        callback(tweets);\n    });\n};\n\nconst Tweet = mongoose.model('Tweet', schema);\nmodule.exports = Tweet;"]}