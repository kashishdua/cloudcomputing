{"version":3,"sources":["../src/streamHandler.js"],"names":["elastic_client","Client","hosts","protocol","host","es","port","module","exports","stream","io","writableStream","createWriteStream","on","data","tweet","author","get","avatar","body","date","screenname","favs","retweets","loc_name","loc_lat","loc_lon","console","log","emit"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,iBAAiB,IAAI,wBAAcC,MAAlB,CAAyB;AAC5CC,WAAO,CACH;AACIC,kBAAU,OADd;AAEIC,cAAM,iBAAOC,EAAP,CAAUD,IAFpB;AAGIE,cAAM;AAHV;AAKA;AACA;AACA;AACA;AACA;AAVG;AADqC,CAAzB,CAAvB;;AAeA;AACAC,OAAOC,OAAP,GAAiB,UAASC,MAAT,EAAiBC,EAAjB,EAAqB;AAClC,QAAIC,iBAAiB,aAAGC,iBAAH,CAAqB,eAArB,CAArB;;AAEAH,WAAOI,EAAP,CAAU,MAAV,EAAiB,UAACC,IAAD,EAAU;AACvB;AACA,YAAIC,QAAQ;AACRC,oBAAQ,iBAAEC,GAAF,CAAMH,IAAN,EAAY,WAAZ,CADA;AAERI,oBAAQ,iBAAED,GAAF,CAAMH,IAAN,EAAW,wBAAX,CAFA;AAGRK,kBAAM,iBAAEF,GAAF,CAAMH,IAAN,EAAY,MAAZ,CAHE;AAIRM,kBAAM,iBAAEH,GAAF,CAAMH,IAAN,EAAY,YAAZ,CAJE;AAKRO,wBAAY,iBAAEJ,GAAF,CAAMH,IAAN,EAAY,kBAAZ,CALJ;AAMRQ,kBAAM,iBAAEL,GAAF,CAAMH,IAAN,EAAW,gBAAX,CANE;AAORS,sBAAU,iBAAEN,GAAF,CAAMH,IAAN,EAAW,eAAX,CAPF;AAQRU,sBAAU,iBAAEP,GAAF,CAAMH,IAAN,EAAW,iBAAX,CARF;AASRW,qBAAS,iBAAER,GAAF,CAAMH,IAAN,EAAW,4BAAX,KAA4C,iBAAEG,GAAF,CAAMH,IAAN,EAAW,oBAAX,CAT7C;AAURY,qBAAS,iBAAET,GAAF,CAAMH,IAAN,EAAW,4BAAX,KAA2C,iBAAEG,GAAF,CAAMH,IAAN,EAAW,oBAAX;AAV5C,SAAZ;AAYAa,gBAAQC,GAAR,CAAYb,KAAZ;AACA;;AAEA;AACA;AACA,YAAKA,MAAMU,OAAN,IAAiBV,MAAMW,OAAxB,IAAoCX,MAAMS,QAA9C,EAAwD;AACpDd,eAAGmB,IAAH,CAAQ,OAAR,EAAiBd,KAAjB;AACA,0CAAef,cAAf,EAA+BU,EAA/B,EAAmCK,KAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ,KAjCD;AAkCH,CArCD","file":"streamHandler.js","sourcesContent":["import Tweet from './models/Tweet';\nimport _ from 'lodash';\nimport fs from 'fs';\nimport elasticHandler from './elasticHandler';\nimport elasticsearch from 'elasticsearch';\nimport config from './config';\n\nconst elastic_client = new elasticsearch.Client({\n    hosts: [\n        {\n            protocol: 'https',\n            host: config.es.host,\n            port: 443\n        }\n        // ,\n        // {\n        //     host: 'localhost',\n        //     port: 9200\n        // }\n    ]\n});\n\n//Handles the twitter stream data, and socket io obj avail\nmodule.exports = function(stream, io) {\n    let writableStream = fs.createWriteStream('../tweets.txt');\n\n    stream.on('data',(data) => {\n        //tweet obj\n        let tweet = {\n            author: _.get(data, 'user.name'),\n            avatar: _.get(data,'user.profile_image_url'),\n            body: _.get(data, 'text'),\n            date: _.get(data, 'created_at'),\n            screenname: _.get(data, 'user.screen_name'),\n            favs: _.get(data,'favorite_count'),\n            retweets: _.get(data,'retweet_count'),\n            loc_name: _.get(data,'place.full_name'),\n            loc_lat: _.get(data,'coordinates.coordinates[1]') || _.get(data,'geo.coordinates[0]'),\n            loc_lon: _.get(data,'coordinates.coordinates[0]')|| _.get(data,'geo.coordinates[1]')\n        };\n        console.log(tweet);\n        // if (tweet.loc_lat && tweet.loc_lon) console.log(tweet);\n\n        // let tweetEntry = new Tweet(tweet);\n        // Save 'er to the database\n        if ((tweet.loc_lat && tweet.loc_lon) || tweet.loc_name) {\n            io.emit('tweet', tweet);\n            elasticHandler(elastic_client, io, tweet);\n            // tweetEntry.save(function(err) {\n            //     if (!err) {\n            //         // If everything is cool, socket.io emits the tweet.\n            //         console.log('tweet saved');\n            //         //io.broadcast.emit('tweet', tweet);\n            //         io.emit('tweet', tweet);\n            //         //Write to File\n            //         // writableStream.write(tweet.body);\n            //     }\n            // });\n        }\n    });\n};"]}